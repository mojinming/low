a = [23, 45, 1, -3434, 43624356, 234]  #添加元素 45 到列表末尾。
a.append(45)
# >>> a
# [23, 45, 1, -3434, 43624356, 234, 45]

a.insert(0, 1) # 在列表索引 0 位置添加元素 1
# >>> a
# [1, 23, 45, 1, -3434, 43624356, 234, 45]

a.count(45) #列表方法 count(s) 会返回列表元素中 s 的数量
# 2

a.remove(234)  #在列表中移除任意指定值

a.reverse()   #反转整个列表。

b = [45, 56, 90]  #添加一个列表
a.extend(b)

a.sort() #排序
# [-3434, 1, 1, 23, 45, 45, 45, 56, 90, 111, 43624356]


del a[-1] #del 删除指定位置

a.pop()     #栈的出
a.append()   #栈的进

squares = []
for x in range(10):
    squares.append(x**2)
print(squares)

squares1 = list(map(lambda x: x**2, range(10)))
print(squares1)

squares2 = [x**2 for x in range(10)]   #列表推导式
print(squares2)

a=[(x, y) for x in [1,2,3] for y in [3,1,4] if x != y]  #列表推导式
print(a)
# [(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)]


combs = []      #列表推导式的解释，等同
for x in [1,2,3]:
    for y in [3,1,4]:
        if x != y:
            combs.append((x, y))
print(combs)


a=[1,2,3]  #列表推导式也可以嵌套
z = [x + 1 for x in [x ** 2 for x in a]]
print(z)
# [2, 5, 10]
